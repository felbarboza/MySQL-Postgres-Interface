/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfacebancodedados;

import java.io.BufferedWriter;
import java.sql.*;
import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;
import java.io.File;  // Import the File class
import java.io.IOException;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.Scanner; 
/**
 *
 * @author Felipe
 */
public class Intercade extends javax.swing.JFrame {
    private java.sql.Connection con;
    private DefaultListModel modelo_da_lista1 = new DefaultListModel();
    private DefaultListModel modelo_da_lista2 = new DefaultListModel();
    private DefaultListModel modelo_lista_databases = new DefaultListModel();
    private String user;
    private String password;
    private String url;
    private FileWriter myWriter;
    private Boolean isEmpty;

    /**
     * Creates new form Intercade
     */
    
    public Intercade() {
        initComponents();
        try {
        File myObj = new File("databases.txt");
        isEmpty = (myObj.length()==0);
        if (myObj.createNewFile()) {
          System.out.println("File created: " + myObj.getName());
        } else {
          System.out.println("File already exists.");
        }
        Scanner sc = new Scanner(myObj);
        sc.useDelimiter("\n");
  
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        while(sc.hasNextLine()){   
            String line = sc.next();
            String[] cells = line.split(",");
            if(cells.length > 1){
            
            model.addRow(cells);}
        }
        }
       catch (IOException e) {
        System.out.println("An error occurred.");
        e.printStackTrace();
      }
        
    }
    
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        urlText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        userText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        passwordText = new javax.swing.JPasswordField();
        buttonCreateConn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jList3 = new javax.swing.JList<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Create Connection");

        jLabel2.setText("URL:");

        jLabel3.setText("User:");

        jLabel4.setText("Password:");

        buttonCreateConn.setText("Create");
        buttonCreateConn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCreateConnActionPerformed(evt);
            }
        });

        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jLabel5.setText("Tables");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(jTable1);

        jLabel6.setText("Views");

        jList2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jList2);

        jLabel7.setText("DataBases");

        jList3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList3MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jList3);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "url", "user", "password"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jTable2);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane6.setViewportView(jTable3);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane7.setViewportView(jTextArea1);

        jButton1.setText("Execute Query");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7)
                    .addComponent(jLabel4)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(urlText)
                            .addComponent(userText)))
                    .addComponent(jScrollPane5)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(passwordText))
                    .addComponent(buttonCreateConn, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(126, 126, 126))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 784, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(urlText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(jScrollPane2))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton1))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(15, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(userText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(passwordText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonCreateConn)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCreateConnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCreateConnActionPerformed
        password = new String(this.passwordText.getPassword());
        user = this.userText.getText();
        url = this.urlText.getText();
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        Object[] row = { url, user, password};
        model.addRow(row);
        
        this.jTable1.setVisible(false);
        try{
        con = DriverManager.getConnection(url+"?useTimezone=true&serverTimezone=UTC", user, password);
        //+"?useTimezone=true&serverTimezone=UTC"
        Statement stmt = con.createStatement();
        //Retrieving the data
        ResultSet rs;
        try{
            rs = stmt.executeQuery("Show Databases");
        }catch(SQLException err1){
            rs = stmt.executeQuery("SELECT datname FROM pg_database WHERE datistemplate = false;");
        }
        modelo_lista_databases.clear();
        while(rs.next()) {
           modelo_lista_databases.addElement(rs.getString(1));
        }
        this.jList3.setModel(modelo_lista_databases);
        try{
            myWriter = new FileWriter("databases.txt", true);
            BufferedWriter bw = new BufferedWriter(myWriter); 
            if(isEmpty){
                bw.write(url + "," + user + "," + password);
            }
            else{
            bw.write("\n" + url + "," + user + "," + password);}
            //pw.println("\n" + url + "," + user + "," + password); 
            //pw.close();
            bw.close();
        }
        catch(IOException e){
            System.out.println("An error occurred.");
            e.printStackTrace();
        }
        }catch(SQLException sql1){
            System.out.println("Erro em banco de dados:" + sql1);
            System.exit(0);
        }
        

    }//GEN-LAST:event_buttonCreateConnActionPerformed

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        this.jTable1.setVisible(true);
        Vector<Object> columnNames = new Vector<Object>();
        Vector<Object> data = new Vector<Object>();
        Vector<Object> columnNames2 = new Vector<Object>();
        Vector<Object> data2 = new Vector<Object>();
        

        try{
            Statement stmt = con.createStatement();
            //Retrieving the data
            ResultSet rs = stmt.executeQuery("select * from " + jList1.getSelectedValue() + " limit 20");
            ResultSetMetaData md = rs.getMetaData();
            int columns = md.getColumnCount();

            for (int i = 1; i <= columns; i++)
            {
                columnNames.addElement( md.getColumnName(i) );
            }
             while (rs.next())
            {
                Vector<Object> row = new Vector<Object>(columns);

                for (int i = 1; i <= columns; i++)
                {
                    row.addElement( rs.getObject(i) );
                }

                data.addElement( row );
            }
            
            DefaultTableModel model = new DefaultTableModel(data, columnNames);
            
            jTable1.setModel(model);

            rs.close();
            stmt.close();
            
            
            Statement stmt2 = con.createStatement();
            
            ResultSet rs2;
            //String query = new String("select * FROM information_schema.columns WHERE table_schema=" + jList3.getSelectedValue() + " and table_name = " + jList1.getSelectedValue());
            
            try{rs2= stmt2.executeQuery("explain " + jList1.getSelectedValue());}catch(SQLException sql2){
                rs2 = stmt2.executeQuery("select column_name, data_type, is_nullable from INFORMATION_SCHEMA.COLUMNS where table_name = '" + jList1.getSelectedValue() + "';");
            }
            ResultSetMetaData md2 = rs2.getMetaData();
            
            columns = md2.getColumnCount();

            for (int i = 1; i <= columns; i++)
            {
                columnNames2.addElement( md2.getColumnName(i) );
            }
             while (rs2.next())
            {
                Vector<Object> row = new Vector<Object>(columns);

                for (int i = 1; i <= columns; i++)
                {
                    row.addElement( rs2.getObject(i) );
                }

                data2.addElement( row );
            }
            
            rs2.close();
            stmt2.close();
            
            DefaultTableModel model2 = new DefaultTableModel(data2, columnNames2);
            
            jTable3.setModel(model2);
           

        }catch(SQLException sql1){
            System.out.println("Erro em banco de dados:" + sql1);
            System.exit(0);
        }
    }//GEN-LAST:event_jList1MouseClicked

    private void jList2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList2MouseClicked
        this.jTable1.setVisible(true);
        Vector<Object> columnNames = new Vector<Object>();
        Vector<Object> data = new Vector<Object>();
        Vector<Object> columnNames2 = new Vector<Object>();
        Vector<Object> data2 = new Vector<Object>();
        

        try{
            Statement stmt = con.createStatement();
            //Retrieving the data
            ResultSet rs = stmt.executeQuery("select * from " + jList2.getSelectedValue() + " limit 20");
            ResultSetMetaData md = rs.getMetaData();
            int columns = md.getColumnCount();

            for (int i = 1; i <= columns; i++)
            {
                columnNames.addElement( md.getColumnName(i) );
            }
             while (rs.next())
            {
                Vector<Object> row = new Vector<Object>(columns);

                for (int i = 1; i <= columns; i++)
                {
                    row.addElement( rs.getObject(i) );
                }

                data.addElement( row );
            }

            DefaultTableModel model = new DefaultTableModel(data, columnNames);
            
            jTable1.setModel(model);
            
            Statement stmt2 = con.createStatement();
            ResultSet rs2;
            //String query = new String("select * FROM information_schema.columns WHERE table_schema=" + jList3.getSelectedValue() + " and table_name = " + jList1.getSelectedValue());
            
            try{rs2= stmt2.executeQuery("explain " + jList2.getSelectedValue());}catch(SQLException sql2){
                rs2 = stmt2.executeQuery("select column_name, data_type, is_nullable from INFORMATION_SCHEMA.COLUMNS where table_name = '" + jList2.getSelectedValue() + "';");
            }
            ResultSetMetaData md2 = rs2.getMetaData();
            columns = md2.getColumnCount();
            

            for (int i = 1; i <= columns; i++)
            {
                columnNames2.addElement( md2.getColumnName(i) );
            }
             while (rs2.next())
            {
                Vector<Object> row = new Vector<Object>(columns);

                for (int i = 1; i <= columns; i++)
                {
                    row.addElement( rs2.getObject(i) );
                }

                data2.addElement( row );
            }
            
            rs2.close();
            stmt2.close();
            
            DefaultTableModel model2 = new DefaultTableModel(data2, columnNames2);
            
            jTable3.setModel(model2);
           

        }catch(SQLException sql1){
            System.out.println("Erro em banco de dados:" + sql1);
            System.exit(0);
        }
    }//GEN-LAST:event_jList2MouseClicked

    private void jList3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList3MouseClicked
        try{
            con = DriverManager.getConnection(url+jList3.getSelectedValue()+"?useTimezone=true&serverTimezone=UTC", user, password);
            Statement stmt = con.createStatement();
            //Retrieving the data
            ResultSet rs;
            try{
                rs = stmt.executeQuery("SHOW FULL TABLES WHERE table_type = 'BASE TABLE'");
            } catch(SQLException err1){
            rs = stmt.executeQuery("select tablename from pg_tables where schemaname!='information_schema'");
            }
            modelo_da_lista1.clear();
            while(rs.next()) {
                modelo_da_lista1.addElement(rs.getString(1));
            }
            this.jList1.setModel(modelo_da_lista1);
            
            try{
                rs = stmt.executeQuery("SHOW FULL TABLES WHERE table_type = 'VIEW'");
            } catch(SQLException err1){
            rs = stmt.executeQuery("select viewname from pg_views where schemaname!='information_schema'");
            }
            
            
            modelo_da_lista2.clear();
            while(rs.next()) {
                modelo_da_lista2.addElement(rs.getString(1));
            }
            this.jList2.setModel(modelo_da_lista2);

            //rs = stmt.executeQuery("select * from instructor");

        }catch(SQLException sql1){
            System.out.println("Erro em banco de dados:" + sql1);
            System.exit(0);
        }
    }//GEN-LAST:event_jList3MouseClicked

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        int selectedRow = jTable2.getSelectedRow();
        url = (String) jTable2.getValueAt(selectedRow, 0);
        user = (String) jTable2.getValueAt(selectedRow, 1);
        password = (String) jTable2.getValueAt(selectedRow, 2);
        password = password.replace("\n", "");
        try{
        con = DriverManager.getConnection(url+"?useTimezone=true&serverTimezone=UTC", user, password);
        
        Statement stmt = con.createStatement();
        //Retrieving the data
        ResultSet rs;
        try{
            rs = stmt.executeQuery("Show Databases");
        }catch(SQLException err1){
            rs = stmt.executeQuery("SELECT datname FROM pg_database WHERE datistemplate = false;");
        }
        modelo_lista_databases.clear();
        while(rs.next()) {
           modelo_lista_databases.addElement(rs.getString(1));
        }
        this.jList3.setModel(modelo_lista_databases);
          
        }catch(SQLException sql1){
            System.out.println("Erro em banco de dados:" + sql1);
            System.exit(0);
        }
    }//GEN-LAST:event_jTable2MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Vector<Object> columnNames = new Vector<Object>();
        Vector<Object> data = new Vector<Object>();
        
        try{
            Statement stmt = con.createStatement();
            //Retrieving the data
            ResultSet rs = stmt.executeQuery(jTextArea1.getText());
            ResultSetMetaData md = rs.getMetaData();
            int columns = md.getColumnCount();

            for (int i = 1; i <= columns; i++)
            {
                columnNames.addElement( md.getColumnName(i) );
            }
             while (rs.next())
            {
                Vector<Object> row = new Vector<Object>(columns);

                for (int i = 1; i <= columns; i++)
                {
                    row.addElement( rs.getObject(i) );
                }

                data.addElement( row );
            }

            rs.close();
            stmt.close();
            DefaultTableModel model = new DefaultTableModel(data, columnNames);
            
            jTable1.setModel(model);
            
        }catch(SQLException sql1){
            System.out.println("Erro em banco de dados:" + sql1);
            System.exit(0);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Intercade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Intercade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Intercade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Intercade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Intercade().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCreateConn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JList<String> jList3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JPasswordField passwordText;
    private javax.swing.JTextField urlText;
    private javax.swing.JTextField userText;
    // End of variables declaration//GEN-END:variables
}
